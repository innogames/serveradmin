name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  tests:
    name: Test code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    services:
      db:
        image: 'postgres:14'
        env:
          POSTGRES_USER: serveradmin
          POSTGRES_PASSWORD: serveradmin
          POSTGRES_DB: serveradmin
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      pdns-db:
        image: 'postgres:14'
        env:
          POSTGRES_USER: powerdns
          POSTGRES_PASSWORD: powerdns
          POSTGRES_DB: powerdns
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare
        run: |
          pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --with django-backend
          echo "DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'HOST': '127.0.0.1',
                  'PORT': '${{ job.services.db.ports[5432] }}',
                  'NAME': 'serveradmin',
                  'USER': 'serveradmin',
                  'PASSWORD': 'serveradmin',
                  'OPTIONS': {
                      'connect_timeout': 1,
                      'client_encoding': 'UTF8',
                  },
              },
              'powerdns': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'HOST': '127.0.0.1',
                  'PORT': '${{ job.services.pdns-db.ports[5432] }}',
                  'NAME': 'powerdns',
                  'USER': 'powerdns',
                  'PASSWORD': 'powerdns',
                  'OPTIONS': {
                      'connect_timeout': 1,
                      'client_encoding': 'UTF8',
                  },
              },
          }
          SECRET_KEY = 'TEST'
          LOGGING = {}" > serveradmin/local_settings.py
          cat serveradmin/local_settings.py
          poetry run python -m serveradmin migrate
      - name: Tests
        run: |
          # This will use Python's standard unit test discovery feature.
          poetry run python -m unittest discover adminapi -v
          poetry run python -Wall -m serveradmin test --noinput --parallel
          # Build sphinx docs, error on warning
          cd docs
          SPHINXBUILD='poetry run sphinx-build' SPHINXOPTS='-W' make html
