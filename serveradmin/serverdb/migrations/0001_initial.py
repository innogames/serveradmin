# Generated by Django 2.1.1 on 2018-09-02 22:26

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import netfields.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('apps', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                (
                    'attribute_id',
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        validators=[django.core.validators.RegexValidator('\\A[a-z][a-z0-9_]+\\Z', 'Invalid id')],
                    ),
                ),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('string', 'string'),
                            ('boolean', 'boolean'),
                            ('relation', 'relation'),
                            ('reverse', 'reverse'),
                            ('number', 'number'),
                            ('inet', 'inet'),
                            ('macaddr', 'macaddr'),
                            ('date', 'date'),
                            ('supernet', 'supernet'),
                            ('domain', 'domain'),
                        ],
                        max_length=32,
                    ),
                ),
                ('multi', models.BooleanField(default=False)),
                ('hovertext', models.TextField(blank=True, default='')),
                ('group', models.CharField(default='other', max_length=32)),
                ('help_link', models.CharField(blank=True, max_length=255, null=True)),
                ('readonly', models.BooleanField(default=False)),
                ('clone', models.BooleanField(default=False)),
                (
                    'regexp',
                    models.CharField(
                        max_length=1024,
                        validators=[
                            django.core.validators.RegexValidator(
                                '\\A\\\\A.*\\\\Z\\Z',
                                'You must wrap your pattern in "\\A" and "\\Z" to force line matching',
                            )
                        ],
                    ),
                ),
                (
                    'reversed_attribute',
                    models.ForeignKey(
                        blank=True,
                        db_index=False,
                        limit_choices_to={'type': 'relation'},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='reversed_attribute_set',
                        to='serverdb.Attribute',
                    ),
                ),
            ],
            options={
                'db_table': 'attribute',
                'ordering': ['attribute_id'],
            },
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('changes_json', models.TextField()),
                (
                    'app',
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='apps.Application'),
                ),
                (
                    'user',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ChangeAdd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_id', models.IntegerField(db_index=True)),
                ('attributes_json', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeCommit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                (
                    'app',
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='apps.Application'),
                ),
                (
                    'user',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ChangeDelete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_id', models.IntegerField(db_index=True)),
                ('attributes_json', models.TextField()),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serverdb.ChangeCommit')),
            ],
        ),
        migrations.CreateModel(
            name='ChangeUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_id', models.IntegerField(db_index=True)),
                ('updates_json', models.TextField()),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serverdb.ChangeCommit')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('server_id', models.AutoField(primary_key=True, serialize=False)),
                (
                    'hostname',
                    models.CharField(
                        max_length=64,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                '\\A(\\*\\.)?([a-z0-9]+[\\.\\-])*[a-z0-9]+\\Z', 'Invalid hostname'
                            )
                        ],
                    ),
                ),
                ('intern_ip', netfields.fields.InetAddressField(blank=True, max_length=39, null=True)),
            ],
            options={
                'db_table': 'server',
            },
        ),
        migrations.CreateModel(
            name='ServerBooleanAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'attribute',
                    models.ForeignKey(
                        limit_choices_to={'type': 'boolean'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_boolean_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerDateAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateField()),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'date'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_date_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerInetAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', netfields.fields.InetAddressField(max_length=39)),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'inet'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_inet_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerMACAddressAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', netfields.fields.MACAddressField()),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'macaddr'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_macaddr_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerNumberAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=0, max_digits=65)),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'number'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_number_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerRelationAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'relation'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
                (
                    'value',
                    models.ForeignKey(
                        db_column='value',
                        db_index=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='relation_attribute_servers',
                        related_query_name='relation_attribute_server',
                        to='serverdb.Server',
                    ),
                ),
            ],
            options={
                'db_table': 'server_relation_attribute',
            },
        ),
        migrations.CreateModel(
            name='ServerStringAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1024)),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        limit_choices_to={'type': 'string'},
                        on_delete=django.db.models.deletion.CASCADE,
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'server',
                    models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to='serverdb.Server'
                    ),
                ),
            ],
            options={
                'db_table': 'server_string_attribute',
            },
        ),
        migrations.CreateModel(
            name='Servertype',
            fields=[
                (
                    'servertype_id',
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        validators=[django.core.validators.RegexValidator('\\A[a-z][a-z0-9_]+\\Z', 'Invalid id')],
                    ),
                ),
                ('description', models.CharField(max_length=1024)),
                (
                    'ip_addr_type',
                    models.CharField(
                        choices=[
                            ('null', 'null'),
                            ('host', 'host'),
                            ('loadbalancer', 'loadbalancer'),
                            ('network', 'network'),
                        ],
                        max_length=32,
                    ),
                ),
            ],
            options={
                'db_table': 'servertype',
                'ordering': ['servertype_id'],
            },
        ),
        migrations.CreateModel(
            name='ServertypeAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.BooleanField(default=False)),
                ('default_value', models.CharField(blank=True, max_length=255, null=True)),
                ('default_visible', models.BooleanField(default=False)),
                (
                    'attribute',
                    models.ForeignKey(
                        db_index=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='servertype_attributes',
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'consistent_via_attribute',
                    models.ForeignKey(
                        blank=True,
                        db_column='consistent_via_attribute_id',
                        db_index=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='consistent_via_servertype_attributes',
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'related_via_attribute',
                    models.ForeignKey(
                        blank=True,
                        db_index=False,
                        limit_choices_to=models.Q(type__in=['relation', 'reverse', 'supernet', 'domain']),
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='related_via_servertype_attributes',
                        to='serverdb.Attribute',
                    ),
                ),
                (
                    'servertype',
                    models.ForeignKey(
                        db_index=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='attributes',
                        to='serverdb.Servertype',
                    ),
                ),
            ],
            options={
                'db_table': 'servertype_attribute',
                'ordering': ['servertype', 'attribute'],
            },
        ),
        migrations.AddField(
            model_name='server',
            name='servertype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='serverdb.Servertype'),
        ),
        migrations.AddField(
            model_name='changeadd',
            name='commit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='serverdb.ChangeCommit'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='target_servertype',
            field=models.ForeignKey(
                blank=True,
                db_index=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='serverdb.Servertype',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='servertypeattribute',
            unique_together={('servertype', 'attribute')},
        ),
        migrations.AlterUniqueTogether(
            name='serverstringattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='serverstringattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='serverrelationattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='serverrelationattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='servernumberattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='servernumberattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='servermacaddressattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='servermacaddressattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='serverinetattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='serverinetattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='serverdateattribute',
            unique_together={('server', 'attribute', 'value')},
        ),
        migrations.AlterIndexTogether(
            name='serverdateattribute',
            index_together={('attribute', 'value')},
        ),
        migrations.AlterUniqueTogether(
            name='serverbooleanattribute',
            unique_together={('server', 'attribute')},
        ),
        migrations.AlterIndexTogether(
            name='serverbooleanattribute',
            index_together={('attribute',)},
        ),
        migrations.AlterUniqueTogether(
            name='changeupdate',
            unique_together={('commit', 'server_id')},
        ),
        migrations.AlterUniqueTogether(
            name='changedelete',
            unique_together={('commit', 'server_id')},
        ),
        migrations.AlterUniqueTogether(
            name='changeadd',
            unique_together={('commit', 'server_id')},
        ),
    ]
